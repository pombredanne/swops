#!/bin/sh
# ScraperWiki Limited 2012
# Script to sync a variety of packages:
#   debian packages (installed with apt-get / aptitude)
#   node packages (npm)
#   python packages (pip)
#   ruby gems (gem)
#
# from one machine to another.

# See
# http://www.debian-administration.org/article/669/Cloning_a_Debian_system_-_identical_packages_and_versions
# for some source hints (that version preserves exact package
# versions; we're not going to do that because it didn't work when
# we tried it.

# So that newlines are not destroyed when we do $(cmd)
IFS=''

# The location of the chroot'd basejail in both the source and
# the target machines.
chroot=/opt/basejail

usage () {
  # print usage info
  echo "kitchen-sync [--all] [--debian] [--node] [--ruby] [--python] source target
  list of packages is taken from source and installed on target"
}

onsource () {
  # Run command in chroot on source.
  li sh "$source_machine" DEBIAN_FRONTEND=noninteractive chroot $chroot "$@"
}

ontarget () {
  # Run command in chroot on target.
  li sh "$target_machine" DEBIAN_FRONTEND=noninteractive chroot $chroot "$@"
}

main () {
  managers=''
  while [ $# -gt 0 ]
  do
    case $1 in
      (--help|-h) usage; exit 0;;
      (--all|-a) managers="deb node py rb"; shift;;
      (--debian|-d) managers=$(printf '%s ' deb $managers); shift;;
      (--node|-n) managers=$(printf '%s ' node $managers); shift;;
      (--python|-p) managers=$(printf '%s ' py $managers); shift;;
      (--ruby|-r) managers=$(printf '%s ' rb $managers); shift;;
      (-*) echo 1>&2 "option $1 unknown"; usage 1>&2; exit 4;;
      (*) break;;
    esac
  done
  
  # We actually rely on these variables being global to the
  # script.  drj apologises.
  source_machine=$1
  target_machine=$2
  if [ -z "$source_machine" ] || [ -z "$target_machine" ]
  then 
    echo 1>&2 "source and target are required"
    usage 1>&2
    exit 4
  fi
  # Test to see if we can run 'li' at all
  li > /dev/null || {
    echo 1>&2 "li not found; try cd li; .  activate"
    exit 4
  }
  IFS=' '
  for m in $managers
  do
    ${m}_sync
  done
}

deb_sync () {
  IFS=''
  list=$(deb_getlist)
  # space tab newline
  IFS=' 	
'
  packages=$(echo "$list" | awk '{print $1}')
  autos=$(echo "$list" | awk '$2=="A" {print $1}')

  ontarget aptitude update
  ontarget aptitude -q -R --schedule-only install $packages
  ontarget aptitude -q -R --schedule-only markauto $autos
  ontarget mount /proc
  ontarget aptitude -y -o Dpkg::Options::=--force-confdef install
}

deb_getlist () {
  onsource aptitude -q -F "'%?p %M'" --disable-columns search \~i
}

node_sync () {
  IFS=' 	
'
  list=$(node_getlist)
  ontarget npm install $list
}

node_getlist () {
  # $6 so we only get top-level node packages
  onsource npm list -gp | awk -F/ '{print $6}' | sort | uniq
}

py_sync () {
  IFS=' 	
'
  set -x
  py_getlist > kitchen-requirements.txt
  cat kitchen-requirements.txt | ontarget tee /tmp/kitchen.txt
  ontarget pip install --requirement /tmp/kitchen.txt
}

py_getlist () {
  onsource pip freeze
}

main "$@"
