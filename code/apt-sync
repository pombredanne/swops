#!/bin/sh
# ScraperWiki Limited 2012
# Script to sync debian packages (installed with apt-get)
# from one machine to another.

# See
# http://www.debian-administration.org/article/669/Cloning_a_Debian_system_-_identical_packages_and_versions
# for some source hints (that version preserves exact package
# versions; we're not going to do that because it didn't work when
# we tried it.

# So that newlines are not destroyed when we do $(cmd)
IFS=''

# The location of the chroot'd basejail in both the source and
# the target machines.
chroot=/opt/basejail

usage () {
  # print usage info
  echo "apt-sync source target
  list of debian packages is taken from source and installed on target"
}

getlist () {
  li sh "$source_machine" chroot $chroot aptitude -q -F "'%?p %M'" --disable-columns search \~i
}

ontarget () {
  # Run command in chroot on target.
  li sh "$target_machine" DEBIAN_FRONTEND=noninteractive chroot $chroot "$@"
}

sync () {
  while [ $# -gt 0 ]
  do
    case $1 in
      (--help|-h) usage; exit 0;;
      (-*) echo 1>&2 "option $1 unknown"; usage 1>&2; exit 4;;
      (*) break;;
    esac
  done
  
  # We actually rely on these variables being global to the
  # script.  drj apologises.
  source_machine=$1
  target_machine=$2
  if [ -z "$source_machine" ] || [ -z "$target_machine" ]
  then 
    usage 1>&2
    exit 4
  fi
  # Test to see if we can run 'li' at all
  li > /dev/null || {
    echo 1>&2 "li not found; try cd li; .  activate"
    exit 4
  }

  list=$(getlist)
  # space tab newline
  IFS=' 	
'
  packages=$(echo "$list" | awk '{print $1}')
  autos=$(echo "$list" | awk '$2=="A" {print $1}')

  ontarget aptitude update
  ontarget aptitude -q -R --schedule-only install $packages
  ontarget aptitude -q -R --schedule-only markauto $autos
  ontarget mount /proc
  ontarget aptitude -y -o Dpkg::Options::=--force-confdef install
}

sync "$@"
